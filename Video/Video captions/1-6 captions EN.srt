1
00:00:00,000 --> 00:00:07,400
By now, I hope what you are seeing is that arithmetic in binary works pretty much exactly the same as it does in decimal, but the concept 

2
00:00:07,400 --> 00:00:16,466
of place value is changed, and understanding binary arithmetic requires a solid understanding of what place value means. As we move from 

3
00:00:16,466 --> 00:00:25,166
addition and subtraction to multiplication in this video and then division in the next, that theme will continue. As with addition and subtraction, 

4
00:00:25,166 --> 00:00:32,832
let's revisit the method for multiplying two integers in base 10 and keep a careful eye on place value. 
 

5
00:00:32,833 --> 00:00:43,266
So look at 263 times 13. Our school algorithm works like this. First position the numbers vertically with the larger one on top. Then 

6
00:00:43,266 --> 00:00:55,532
proceed to multiply the first number by the ones digit in the second. 3 times 3 is 9. 3 times 6 is 18, and just as in addition that overflows the 

7
00:00:55,533 --> 00:01:06,799
one-digit space allocated to it, so we write 8 and carry the 1. Now remember that *says* 1, but it's actually a ten because it's the tens digit 

8
00:01:06,800 --> 00:01:18,300
of 18, and we are going up a place, and every place is ten times larger than the previous place. We carry the 1, then multiply 3 times 2 

9
00:01:18,300 --> 00:01:24,700
and *add* the 1 (because that's what carrying is, just adding) to get 7. 
 

10
00:01:24,700 --> 00:01:32,933
Now we move on to the tens digit in the second number and we're going to store the result in a second row down below. Since this is the tens 

11
00:01:32,933 --> 00:01:42,066
digit, not the ones digit, we shift everything in that second register over by one unit because the result will start in the tens digit of the 

12
00:01:42,066 --> 00:01:51,632
answer. In this case the rest is easy because we're multiplying by 1, so we get 263. Then there's a final stage where we add both lower 

13
00:01:51,633 --> 00:02:01,699
rows, and just as before we sometimes have to carry a digit when adding. Our final answer is 3419. 
 

14
00:02:01,700 --> 00:02:12,333
Now, how would this work in binary? Let's start simple with 111 times 11. Let's roll with this and just try to follow the same rules as with base 10 

15
00:02:12,333 --> 00:02:26,799
multiplication. Well, 111 times 1 is just 111. Then in the second step, it's still 111 times 1 and that is still 111. But when we write it, we're 

16
00:02:26,800 --> 00:02:34,900
shifting over a unit because we're multiplying by a higher place value, just like we were at this stage of the base 10 multiplication. So you 

17
00:02:34,900 --> 00:02:42,700
can see that on one level, binary multiplication is shockingly easy because we are only ever multiplying by 1 which means just copy the 

18
00:02:42,700 --> 00:02:46,700
number down, or by 0 which makes everything zero. 
 

19
00:02:46,700 --> 00:02:54,733
So now we are just left with an addition problem, which we saw how to do two videos ago. We have 1 + 0 (although we don't write 

20
00:02:54,733 --> 00:03:10,199
the 0) which is 1. Then 1+1 which is 2, or 10, so put down 0 and carry the 1. Now we have 1+1+1 which is 3 or "11", so put down 1 and 

21
00:03:10,200 --> 00:03:22,800
carry the other 1. then we have 1+1, which is 10. 10101 is our result and in base 10 that's 16+4+1 which is 21, 

22
00:03:22,800 --> 00:03:29,966
which is good because the original numbers we multiplied are 7 and 3 in base 10. 
 

23
00:03:29,966 --> 00:03:37,299
So in fact the only thing really hard about binary multiplication is binary addition at the end. 
 

24
00:03:37,300 --> 00:03:52,366
Let's try a larger example, 11111 times 101. In base 10 that's 31 and 5, so the answer should be 155. Lining these up, we first multiply by 1 

25
00:03:52,366 --> 00:04:07,966
to get 11111. Then shift once, and multiply by 0. Then we need to shift another time since we are now two places higher. Multiply by 1 to get 

26
00:04:07,966 --> 00:04:28,832
11111. Now add these together: 1+0 is 1, 1+0 is 1, 1+1 is 0 carry the 1; 1+1+1 is 1 carry the 1, and this happens twice; 1+1 is 0 carry a 1, then 

27
00:04:28,833 --> 00:04:39,366
finally 10. That gives us 10011011 which you can check is indeed 155. 
 

28
00:04:39,366 --> 00:04:52,432
One more example will illustrate what happens when the addition at the end starts to stack up. Look at 11111 times 111. That's 31 again but 

29
00:04:52,433 --> 00:05:05,799
this time it's times 7. The answer should be 217. The multiplication steps are very simple and here's where it leads. Now we have to add -- 

30
00:05:05,800 --> 00:05:13,833
but there's something new. We've never tried adding a stack of binary integers like this. In decimal, adding a stack of 3 or more integers 

31
00:05:13,833 --> 00:05:21,099
works pretty much the same as adding just two integers together, although when we do, the numbers can get quite large --- adding two 

32
00:05:21,100 --> 00:05:28,433
integers together in base 10, we sometimes don't carry just a 1 but for example in this case a 2. 
 

33
00:05:28,433 --> 00:05:36,199
We could handle adding a stack of binary integers in one of two ways. We could add just the first two levels then add the result to the 

34
00:05:36,200 --> 00:05:46,700
third level. That would work, but it seems like more work than needed. So let's try to adapt the base 10 method of adding to binary. 
 

35
00:05:46,700 --> 00:05:58,066
In the ones place, it's just 1 plus two zeroes that we don't write, so we have 1. In the 2s place we have 1 + 1 which is 0, carry the 1. 

36
00:05:58,066 --> 00:06:15,266
Now let's think. In the 4s place we have 1+1+1+1. This is 4. In binary, this is 100. What this means is that we have 0 here, and we need to 

37
00:06:15,266 --> 00:06:26,966
carry a 1 to TWO places up. It's like if we added a stack of decimal integers so high that the tens place added up to 106, we'd put down 

38
00:06:26,966 --> 00:06:39,732
6 and carry the 1, but not to the next place up but the place AFTER THAT since that 1 is one hundred, not ten. So we'll carry that 1 to the 

39
00:06:39,733 --> 00:06:52,599
16s place and leave it until we get there. But next we need to add the 8s place. This is 1+1+1 which is 11, so write 1 and carry the 1 also 

40
00:06:52,600 --> 00:07:08,200
to the 16s place. In that 16s place now we have 5 1's. That adds up to 5 which in binary is 101. So write 1 and carry the leftmost 1 up two 

41
00:07:08,200 --> 00:07:25,166
places. Moving on to the 64s place, we have 1+1 which is 0, carry the 1. So finally, we have in the 128s place 1+1+1 which is 11. The result is 

42
00:07:25,166 --> 00:07:37,466
11011001. Is it right? Let's convert to base 10: We get 217, which is indeed what we were supposed to get. 
 

43
00:07:37,466 --> 00:07:44,299
Whew! You've learned at least a couple of things in this video, first the general process of multiplying in binary. And second, possibly 

44
00:07:44,300 --> 00:07:52,500
more importantly, you've learned that place value is really what all of arithmetic hinges on. If you can understand what all the digits of a 

45
00:07:52,500 --> 00:08:00,600
number mean in terms of their place value, this unlocks all of arithmetic and also a real understanding of how a machine can do 

46
00:08:00,600 --> 00:08:07,900
arithmetic. Next up we will tackle our fourth and final arithmetic operation, division in binary. 

