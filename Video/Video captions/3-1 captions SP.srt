1
00:00:00,000 --> 00:00:07,000
Bienvenido al Módulo 3 de este curso. Hasta ahora hemos aprendido mucho sobre las matemáticas en las que se basa la informática. Hemos aprendido

2
00:00:07,000 --> 00:00:13,766
cómo representar números enteros en diferentes bases numéricas que hacen posible que las computadoras hagan matemáticas con ellos. También hemos aprendido sobre el

3
00:00:13,766 --> 00:00:21,799
lógica que tanto los humanos como las computadoras usan para procesar información. En este nuevo módulo vamos a estudiar otro edificio fundamental.

4
00:00:21,800 --> 00:00:26,433
bloque de la informática, la noción de SET.

5
00:00:26,433 --> 00:00:32,966
De hecho, ya nos hemos encontrado con esta idea más de una vez en los videos anteriores. Por ejemplo, cuando introdujimos predicados,

6
00:00:32,966 --> 00:00:41,266
habló sobre su "conjunto de la verdad". Esta fue la colección de todos los valores de entrada que hace que un predicado sea verdadero. Por ejemplo, el conjunto de verdad del

7
00:00:41,266 --> 00:00:54,632
el predicado P (x), que es el enunciado de que x mod 5 es 3, consta de los números 3, 8, 13, 18, etc., así como -2, -7, -12, etc.

8
00:00:54,633 --> 00:01:00,433
Necesitamos una forma práctica y precisa de hablar sobre esta colección. Y eso es lo que nos da un set.

9
00:01:00,433 --> 00:01:08,399
Un conjunto es simplemente una colección desordenada de objetos. Eso es todo. No hay restricciones sobre lo que puede incluirse en un conjunto, y no hay

10
00:01:08,400 --> 00:01:17,000
restricción en el orden en el que ponemos las cosas en un conjunto. La única restricción que existe realmente en un conjunto es que no podemos duplicar objetos. Una vez

11
00:01:17,000 --> 00:01:21,466
un objeto está en un conjunto, no lo colocamos dos veces.

12
00:01:21,466 --> 00:01:28,532
Estamos usando esta imagen de cajas para los videos de este módulo porque las cajas son una forma útil de pensar en conjuntos. Los conjuntos son solo

13
00:01:28,533 --> 00:01:35,966
contenedores. Cualquier cosa puede entrar en ellos. Incluso otras cajas pueden ir dentro de ellas, ¡o pueden estar vacías! El orden de lo que hay dentro de esos

14
00:01:35,966 --> 00:01:43,632
las cajas realmente no importan. Los juegos son un concepto extremadamente simple que está ampliamente abierto para un uso especializado, y eso los convierte en los

15
00:01:43,633 --> 00:01:51,533
concepto matemático perfecto para impulsar muchos conceptos informáticos más complicados de paquetes y contenedores.

16
00:01:51,533 --> 00:01:59,333
Los objetos de un conjunto a menudo se denominan * elementos * del conjunto. Y para la notación, a veces usamos variables en mayúsculas para representar un

17
00:01:59,333 --> 00:02:08,333
conjunto, y usualmente usamos llaves como estas para encerrar los elementos de un conjunto. Por ejemplo, este conjunto T es el conjunto de verdad del predicado P (x)

18
00:02:08,333 --> 00:02:18,933
mencionamos anteriormente cuyos elementos son los números enteros que son 3 mod 5. Y aquí hay un conjunto S con solo tres elementos, las letras a, by c.

19
00:02:18,933 --> 00:02:25,766
Y aquí hay un conjunto R que contiene cuatro elementos que son una combinación de números, letras e incluso otros conjuntos. Al igual que una caja que podrías obtener cuando

20
00:02:25,766 --> 00:02:31,299
you buy something might contain other boxes, sets can contain other sets.

21
00:02:31,300 --> 00:02:38,633
Sets are foundational in computer science because every data structure you will ever use in computer science is based on sets. Python

22
00:02:38,633 --> 00:02:47,433
lists and dictionaries for example are not sets (because for example in a Python list, you can have elements duplicated and the order

23
00:02:47,433 --> 00:02:55,266
matters) but they behave like sets and use a lot of the same language to describe them. Any time we use one of these data structures, for

24
00:02:55,266 --> 00:03:00,732
example when we execute a FOR loop, we are working basically with sets.

25
00:03:00,733 --> 00:03:08,933
Sets in mathematics, unlike data structures in computer science, can be both finite or infinite. For example here is a finite set whose

26
00:03:08,933 --> 00:03:17,333
elements are the letters of the English alphabet. And here is an infinite set whose elements are the positive integers. The three

27
00:03:17,333 --> 00:03:25,366
dots indicate a pattern that continues. This set, consisting of all even integers, is infinite in both directions.

28
00:03:25,366 --> 00:03:32,232
As we said, the objects in a set are called "elements" and if we want to say that a particular object is an element of a set we use

29
00:03:32,233 --> 00:03:40,199
this notation here, which looks like an e. This for example says that the number 8 is an element of this set. And this notation here, with

30
00:03:40,200 --> 00:03:49,166
a slash mark through the "element of" symbol, is saying that the number 11 is not an element of this set.

31
00:03:49,166 --> 00:03:56,599
We can even have a set with no elements in it at all. This is called the empty set, sometimes called the "null set", and it's denoted by this

32
00:03:56,600 --> 00:04:04,500
symbol here which looks like a 0 with a line through it. If the idea of an empty set seems weird, just go back to the box metaphor --- it's

33
00:04:04,500 --> 00:04:09,900
not at all weird to think about a box with nothing in it. And that's what the empty set is.

34
00:04:09,900 --> 00:04:16,433
Some sets are so commonly used in math and computer science that they have their own notation. The set of integers, including 0 and

35
00:04:16,433 --> 00:04:28,833
negative integers, often uses this stylized letter Z to denote it. The Z is the first letter in the German word "Zahlen" which means "to count".

36
00:04:28,833 --> 00:04:36,999
Another important set is the set of all integers bigger than or equal to 0. This is called the set of *natural numbers* and it uses this stylized

37
00:04:37,000 --> 00:04:48,033
"N" to represent it. Finally the set of all real numbers, any number at all that can be located on the number line including integers, fractions,

38
00:04:48,033 --> 00:04:54,699
and numbers like pi and square root of 2 that can't be expressed as fractions, is denoted with an R. You can't list those one by one like

39
00:04:54,700 --> 00:04:56,900
integers.

40
00:04:56,900 --> 00:05:05,000
So now you know what a set is, what an element of a set is, how to use curly braces to enclose the elements of a set, what a finite and

41
00:05:05,000 --> 00:05:13,500
infinite set is, what the empty set is, and notation for the special sets of integers, natural numbers, and real numbers. In the next video

42
00:05:13,500 --> 00:05:17,666
we'll look at two different ways to write sets. See you there.