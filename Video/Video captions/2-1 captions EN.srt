1
00:00:00,000 --> 00:00:07,900
Human beings communicate with each other using language. Computers use languages too, but they don't really look (at least not yet) like 

2
00:00:07,900 --> 00:00:14,966
human languages. In this next module of videos, we're going to look at the question of how we take our human language and turn it 

3
00:00:14,966 --> 00:00:22,466
into something that we can use to communicate with machines. This isn't going to be a full course on language design like you 

4
00:00:22,466 --> 00:00:30,032
might study later. Rather just as in the first module, we're going to take a look at the foundations: To the basics of our language to 

5
00:00:30,033 --> 00:00:35,566
see what works in EVERY computer programming language you might choose to study or use.
 

6
00:00:35,566 --> 00:00:43,566
So what aspects of language ARE usable by computers? Well, keep in mind that computers (as much as we might suspect otherwise) do 

7
00:00:43,566 --> 00:00:52,932
not actually "think" and cannot process language, really cannot process anything other than bits. But this connection to bits gives us a 

8
00:00:52,933 --> 00:01:03,799
way to bridge human language with computer operations: We can use the bits to represent the two opposing states of TRUE and FALSE. If 

9
00:01:03,800 --> 00:01:14,700
computers process bits, they can process truth values --- sometimes called Boolean values in computer languages. A 1 represents TRUE, 

10
00:01:14,700 --> 00:01:17,066
and a 0 represents FALSE.
 

11
00:01:17,066 --> 00:01:27,499
So if we restrict human language only to those statements that can be validated as true or false, that's how we can "talk with" computers. 

12
00:01:27,500 --> 00:01:37,900
The study of reasoning using strict rules of validation of truth, is called logic. So at the foundations of how we work with computers, is 

13
00:01:37,900 --> 00:01:42,600
not only mathematics as we saw earlier, but also logic.
 

14
00:01:42,600 --> 00:01:50,266
Statements that can be validated as true or false, are known as propositions. Although sometimes we'll just call them "Statements". 

15
00:01:50,266 --> 00:01:57,166
A proposition in other words is a complete thought --- often a complete sentence or mathematical expression --- 

16
00:01:57,166 --> 00:02:03,366
that has a definite and knowable truth value. Some examples include:
 

17
00:02:03,366 --> 00:02:11,466
Lansing is the capital of Michigan. -- This is a complete sentence, and it has a definite and knowable truth value. In fact we know this 

18
00:02:11,466 --> 00:02:13,099
statement is TRUE.
 

19
00:02:13,100 --> 00:02:19,566
Chicago is the capital of Illinois -- Also a complete thought with a definite truth value. 

20
00:02:19,566 --> 00:02:24,732
It's FALSE, and because we know it's false, it's a proposition.
 

21
00:02:24,733 --> 00:02:34,499
5 + 7 = 12 -- Not an English sentence but a complete mathematical thought that has a definite truth value of TRUE.
 

22
00:02:34,500 --> 00:02:42,200
7 - 2 = 10 -- Again, a complete thought with a definite truth value, this time FALSE.
 

23
00:02:42,200 --> 00:02:47,733
Some non-examples (things that are NOT propositions) include:
 

24
00:02:47,733 --> 00:02:55,966
Michigan is a beautiful state. -- This is a complete sentence, but it's an opinion or a judgment call and cannot be objectively 

25
00:02:55,966 --> 00:03:02,732
evaluated as true or false. I think it's true, but you might not.
 

26
00:03:02,733 --> 00:03:11,499
Let's go to Chicago. -- A complete sentence, but this is an imperative not a statement that is true or false. You can agree that you'd like to 

27
00:03:11,500 --> 00:03:19,766
go to Chicago, but this is different from saying this statement is true. True/false values don't really make sense here.
 

28
00:03:19,766 --> 00:03:26,699
Where is the bread? -- Also a complete sentence, but it's a question and questions don't have truth values.
 

29
00:03:26,700 --> 00:03:37,600
x + 5 = 12. This is trickier. This is a complete mathematical thought, but we cannot tell if it's true or false because there is not enough 

30
00:03:37,600 --> 00:03:50,666
information. This statement --- that the left side of x+5 is equal to 12 --- is true for some values of x but false for others. Without knowing which 

31
00:03:50,666 --> 00:03:59,799
x we are talking about, it's impossible to tell whether this is true or false. So it's not a proposition; eventually we will say that this 

32
00:03:59,800 --> 00:04:05,233
statement is underdetermined, and we'll call such things predicates.
 

33
00:04:05,233 --> 00:04:10,299
Now you try it. Here are some statements, some of which are propositions and some of which are not. 

34
00:04:10,300 --> 00:04:17,400
Pause the video and identify which ones are which.
...
 

35
00:04:17,400 --> 00:04:27,333
So these are the propositions here because they all have definite, knowable truth values. The others are not. This first one is an opinion, 

36
00:04:27,333 --> 00:04:34,333
not a statement that can be objectively true or false. This one is a question, and since questions don't claim that something is true or 

37
00:04:34,333 --> 00:04:45,733
false, they have no truth value. This statement here, x mod 2 equals 0, is underdetermined --- it's true for some values of the variable and 

38
00:04:45,733 --> 00:04:49,266
false for others, so its truth value depends, which makes it not a proposition. However the last statement is a proposition --- it is true that if 

39
00:04:49,266 --> 00:05:06,399
x is even, x mod 2 is 0. What makes the difference here is that the variable x is "quantified" --- we are putting a scope around 

40
00:05:06,400 --> 00:05:15,433
the second part of the statement and claiming that x mod 2 is 0 for ALL even integers. Because we've quantified the variable and not 

41
00:05:15,433 --> 00:05:23,799
just left it alone, we can evaluate the truth of this statement. we'll talk more about quantification in a later video.
 

42
00:05:23,800 --> 00:05:31,300
In this video, you learned about what logic is and why it's important for computer science, what a proposition 

43
00:05:31,300 --> 00:05:37,033
is, and how to tell the difference between propositions and non-propositions. In the next video, we'll look at some basic ways to build 

44
00:05:37,033 --> 00:05:42,133
complex logical propositions out of simple ones using connectives.

